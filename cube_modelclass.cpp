////////////////////////////////////////////////////////////////////////////////
// Filename: cube_modelclass.cpp
////////////////////////////////////////////////////////////////////////////////
#include "cube_modelclass.h"


CubeModelClass::CubeModelClass():IndexModelClass()
{
	m_Material.ambientColor = D3DXVECTOR4( 0.05f, 0.05f, 0.125f, 1.0f );
	m_Material.diffuseColor = D3DXVECTOR4( 0.0f, 0.0f, 1.0f, 1.0f );
	m_Material.specularColor = D3DXVECTOR4( 1.0f, 1.0f, 1.0f, 25.0f );
}


CubeModelClass::CubeModelClass(const CubeModelClass& other)
{
}


CubeModelClass::~CubeModelClass()
{
}

MaterialBufferType CubeModelClass::getMaterial()
{
	return m_Material;
}

bool CubeModelClass::InitializeBuffers(ID3D11Device* device)
{
	HRESULT result;
//
// Process the vertex buffer
//
	VertexNorm* vertices;
	D3D11_BUFFER_DESC vertexBufferDesc;
    D3D11_SUBRESOURCE_DATA vertexData;

	// Set the number of vertices in the vertex array.
	int vCount = 800;
	SetVertexCount(vCount);

	// Create the vertex array.
	vertices = new VertexNorm[vCount];
	if(!vertices)
	{
		return false;
	}

	//D3DXVECTOR3 norm;
	// Load the vertex array with data.
	vertices[0].position = D3DXVECTOR3(0.602614f, 6.1302f, -4.7222f);
	vertices[1].position = D3DXVECTOR3(5.31871f, 6.21092f, -5.12882f);
	vertices[2].position = D3DXVECTOR3(0.595653f, 5.97508f, -4.7222f);
	vertices[3].position = D3DXVECTOR3(5.31698f, 6.3777f, -5.12882f);
	vertices[4].position = D3DXVECTOR3(5.31871f, 6.21092f, -5.12882f);
	vertices[5].position = D3DXVECTOR3(0.602614f, 6.1302f, -4.7222f);
	vertices[6].position = D3DXVECTOR3(5.31871f, 6.21092f, -1.02647f);
	vertices[7].position = D3DXVECTOR3(5.31698f, 6.3777f, -5.12882f);
	vertices[8].position = D3DXVECTOR3(5.31699f, 6.3777f, -1.02647f);
	vertices[9].position = D3DXVECTOR3(5.31871f, 6.21092f, -5.12882f);
	vertices[10].position = D3DXVECTOR3(5.31698f, 6.3777f, -5.12882f);
	vertices[11].position = D3DXVECTOR3(5.31871f, 6.21092f, -1.02647f);
	vertices[12].position = D3DXVECTOR3(0.602614f, 6.1302f, -1.44116f);
	vertices[13].position = D3DXVECTOR3(5.31871f, 6.21092f, -1.02647f);
	vertices[14].position = D3DXVECTOR3(5.31699f, 6.3777f, -1.02647f);
	vertices[15].position = D3DXVECTOR3(0.595653f, 5.97508f, -1.44116f);
	vertices[16].position = D3DXVECTOR3(5.31871f, 6.21092f, -1.02647f);
	vertices[17].position = D3DXVECTOR3(0.602614f, 6.1302f, -1.44116f);
	vertices[18].position = D3DXVECTOR3(0.595653f, 5.97508f, -4.7222f);
	vertices[19].position = D3DXVECTOR3(0.602614f, 6.1302f, -1.44116f);
	vertices[20].position = D3DXVECTOR3(0.602614f, 6.1302f, -4.7222f);
	vertices[21].position = D3DXVECTOR3(0.595653f, 5.97508f, -1.44116f);
	vertices[22].position = D3DXVECTOR3(0.602614f, 6.1302f, -1.44116f);
	vertices[23].position = D3DXVECTOR3(0.595653f, 5.97508f, -4.7222f);
	vertices[24].position = D3DXVECTOR3(0.602614f, 6.1302f, -1.44116f);
	vertices[25].position = D3DXVECTOR3(5.31698f, 6.3777f, -5.12882f);
	vertices[26].position = D3DXVECTOR3(0.602614f, 6.1302f, -4.7222f);
	vertices[27].position = D3DXVECTOR3(5.31699f, 6.3777f, -1.02647f);
	vertices[28].position = D3DXVECTOR3(5.31698f, 6.3777f, -5.12882f);
	vertices[29].position = D3DXVECTOR3(0.602614f, 6.1302f, -1.44116f);
	vertices[30].position = D3DXVECTOR3(0.202635f, 8.64526f, -4.55518f);
	vertices[31].position = D3DXVECTOR3(0.319892f, 8.22551f, -3.77537f);
	vertices[32].position = D3DXVECTOR3(0.319892f, 8.22551f, -4.55518f);
	vertices[33].position = D3DXVECTOR3(0.184242f, 8.71111f, -3.77537f);
	vertices[34].position = D3DXVECTOR3(0.319892f, 8.22551f, -3.77537f);
	vertices[35].position = D3DXVECTOR3(0.202635f, 8.64526f, -4.55518f);
	vertices[36].position = D3DXVECTOR3(0.100898f, 8.61684f, -4.55518f);
	vertices[37].position = D3DXVECTOR3(0.218155f, 8.19709f, -3.77537f);
	vertices[38].position = D3DXVECTOR3(0.082504f, 8.68269f, -3.77537f);
	vertices[39].position = D3DXVECTOR3(0.218155f, 8.19709f, -4.55518f);
	vertices[40].position = D3DXVECTOR3(0.218155f, 8.19709f, -3.77537f);
	vertices[41].position = D3DXVECTOR3(0.100898f, 8.61684f, -4.55518f);
	vertices[42].position = D3DXVECTOR3(0.319892f, 8.22551f, -4.55518f);
	vertices[43].position = D3DXVECTOR3(0.218155f, 8.19709f, -3.77537f);
	vertices[44].position = D3DXVECTOR3(0.218155f, 8.19709f, -4.55518f);
	vertices[45].position = D3DXVECTOR3(0.319892f, 8.22551f, -3.77537f);
	vertices[46].position = D3DXVECTOR3(0.218155f, 8.19709f, -3.77537f);
	vertices[47].position = D3DXVECTOR3(0.319892f, 8.22551f, -4.55518f);
	vertices[48].position = D3DXVECTOR3(0.184242f, 8.71111f, -3.77537f);
	vertices[49].position = D3DXVECTOR3(0.100898f, 8.61684f, -4.55518f);
	vertices[50].position = D3DXVECTOR3(0.082504f, 8.68269f, -3.77537f);
	vertices[51].position = D3DXVECTOR3(0.202635f, 8.64526f, -4.55518f);
	vertices[52].position = D3DXVECTOR3(0.100898f, 8.61684f, -4.55518f);
	vertices[53].position = D3DXVECTOR3(0.184242f, 8.71111f, -3.77537f);
	vertices[54].position = D3DXVECTOR3(0.173895f, 8.74814f, -3.10006f);
	vertices[55].position = D3DXVECTOR3(0.082504f, 8.68269f, -3.77537f);
	vertices[56].position = D3DXVECTOR3(0.072158f, 8.71972f, -3.10006f);
	vertices[57].position = D3DXVECTOR3(0.184242f, 8.71111f, -3.77537f);
	vertices[58].position = D3DXVECTOR3(0.082504f, 8.68269f, -3.77537f);
	vertices[59].position = D3DXVECTOR3(0.173895f, 8.74814f, -3.10006f);
	vertices[60].position = D3DXVECTOR3(0.082504f, 8.68269f, -3.77537f);
	vertices[61].position = D3DXVECTOR3(0.218155f, 8.19709f, -3.10006f);
	vertices[62].position = D3DXVECTOR3(0.072158f, 8.71972f, -3.10006f);
	vertices[63].position = D3DXVECTOR3(0.218155f, 8.19709f, -3.77537f);
	vertices[64].position = D3DXVECTOR3(0.218155f, 8.19709f, -3.10006f);
	vertices[65].position = D3DXVECTOR3(0.082504f, 8.68269f, -3.77537f);
	vertices[66].position = D3DXVECTOR3(0.319892f, 8.22551f, -3.10006f);
	vertices[67].position = D3DXVECTOR3(0.218155f, 8.19709f, -3.77537f);
	vertices[68].position = D3DXVECTOR3(0.319892f, 8.22551f, -3.77537f);
	vertices[69].position = D3DXVECTOR3(0.218155f, 8.19709f, -3.10006f);
	vertices[70].position = D3DXVECTOR3(0.218155f, 8.19709f, -3.77537f);
	vertices[71].position = D3DXVECTOR3(0.319892f, 8.22551f, -3.10006f);
	vertices[72].position = D3DXVECTOR3(0.184242f, 8.71111f, -3.77537f);
	vertices[73].position = D3DXVECTOR3(0.319892f, 8.22551f, -3.10006f);
	vertices[74].position = D3DXVECTOR3(0.319892f, 8.22551f, -3.77537f);
	vertices[75].position = D3DXVECTOR3(0.173895f, 8.74814f, -3.10006f);
	vertices[76].position = D3DXVECTOR3(0.319892f, 8.22551f, -3.10006f);
	vertices[77].position = D3DXVECTOR3(0.184242f, 8.71111f, -3.77537f);
	vertices[78].position = D3DXVECTOR3(0.202635f, 8.64526f, -1.70541f);
	vertices[79].position = D3DXVECTOR3(0.319892f, 8.22551f, -2.42476f);
	vertices[80].position = D3DXVECTOR3(0.184242f, 8.71111f, -2.42476f);
	vertices[81].position = D3DXVECTOR3(0.319892f, 8.22551f, -1.70541f);
	vertices[82].position = D3DXVECTOR3(0.319892f, 8.22551f, -2.42476f);
	vertices[83].position = D3DXVECTOR3(0.202635f, 8.64526f, -1.70541f);
	vertices[84].position = D3DXVECTOR3(0.218155f, 8.19709f, -2.42476f);
	vertices[85].position = D3DXVECTOR3(0.100898f, 8.61684f, -1.70541f);
	vertices[86].position = D3DXVECTOR3(0.082504f, 8.68269f, -2.42476f);
	vertices[87].position = D3DXVECTOR3(0.218155f, 8.19709f, -1.70541f);
	vertices[88].position = D3DXVECTOR3(0.100898f, 8.61684f, -1.70541f);
	vertices[89].position = D3DXVECTOR3(0.218155f, 8.19709f, -2.42476f);
	vertices[90].position = D3DXVECTOR3(0.218155f, 8.19709f, -2.42476f);
	vertices[91].position = D3DXVECTOR3(0.319892f, 8.22551f, -1.70541f);
	vertices[92].position = D3DXVECTOR3(0.218155f, 8.19709f, -1.70541f);
	vertices[93].position = D3DXVECTOR3(0.319892f, 8.22551f, -2.42476f);
	vertices[94].position = D3DXVECTOR3(0.319892f, 8.22551f, -1.70541f);
	vertices[95].position = D3DXVECTOR3(0.218155f, 8.19709f, -2.42476f);
	vertices[96].position = D3DXVECTOR3(0.100898f, 8.61684f, -1.70541f);
	vertices[97].position = D3DXVECTOR3(0.184242f, 8.71111f, -2.42476f);
	vertices[98].position = D3DXVECTOR3(0.082504f, 8.68269f, -2.42476f);
	vertices[99].position = D3DXVECTOR3(0.202635f, 8.64526f, -1.70541f);
	vertices[100].position = D3DXVECTOR3(0.184242f, 8.71111f, -2.42476f);
	vertices[101].position = D3DXVECTOR3(0.100898f, 8.61684f, -1.70541f);
	vertices[102].position = D3DXVECTOR3(0.082504f, 8.68269f, -2.42476f);
	vertices[103].position = D3DXVECTOR3(0.173895f, 8.74814f, -3.10006f);
	vertices[104].position = D3DXVECTOR3(0.072158f, 8.71972f, -3.10006f);
	vertices[105].position = D3DXVECTOR3(0.184242f, 8.71111f, -2.42476f);
	vertices[106].position = D3DXVECTOR3(0.173895f, 8.74814f, -3.10006f);
	vertices[107].position = D3DXVECTOR3(0.082504f, 8.68269f, -2.42476f);
	vertices[108].position = D3DXVECTOR3(0.218155f, 8.19709f, -3.10006f);
	vertices[109].position = D3DXVECTOR3(0.082504f, 8.68269f, -2.42476f);
	vertices[110].position = D3DXVECTOR3(0.072158f, 8.71972f, -3.10006f);
	vertices[111].position = D3DXVECTOR3(0.218155f, 8.19709f, -2.42476f);
	vertices[112].position = D3DXVECTOR3(0.082504f, 8.68269f, -2.42476f);
	vertices[113].position = D3DXVECTOR3(0.218155f, 8.19709f, -3.10006f);
	vertices[114].position = D3DXVECTOR3(0.218155f, 8.19709f, -2.42476f);
	vertices[115].position = D3DXVECTOR3(0.319892f, 8.22551f, -3.10006f);
	vertices[116].position = D3DXVECTOR3(0.319892f, 8.22551f, -2.42476f);
	vertices[117].position = D3DXVECTOR3(0.218155f, 8.19709f, -3.10006f);
	vertices[118].position = D3DXVECTOR3(0.319892f, 8.22551f, -3.10006f);
	vertices[119].position = D3DXVECTOR3(0.218155f, 8.19709f, -2.42476f);
	vertices[120].position = D3DXVECTOR3(0.184242f, 8.71111f, -2.42476f);
	vertices[121].position = D3DXVECTOR3(0.319892f, 8.22551f, -3.10006f);
	vertices[122].position = D3DXVECTOR3(0.173895f, 8.74814f, -3.10006f);
	vertices[123].position = D3DXVECTOR3(0.319892f, 8.22551f, -2.42476f);
	vertices[124].position = D3DXVECTOR3(0.319892f, 8.22551f, -3.10006f);
	vertices[125].position = D3DXVECTOR3(0.184242f, 8.71111f, -2.42476f);
	vertices[126].position = D3DXVECTOR3(-0.046008f, 9.83016f, -4.57959f);
	vertices[127].position = D3DXVECTOR3(0.071249f, 9.4104f, -3.77537f);
	vertices[128].position = D3DXVECTOR3(0.071249f, 9.4104f, -4.57959f);
	vertices[129].position = D3DXVECTOR3(-0.064401f, 9.896f, -3.77537f);
	vertices[130].position = D3DXVECTOR3(0.071249f, 9.4104f, -3.77537f);
	vertices[131].position = D3DXVECTOR3(-0.046008f, 9.83016f, -4.57959f);
	vertices[132].position = D3DXVECTOR3(-0.147745f, 9.80174f, -4.57959f);
	vertices[133].position = D3DXVECTOR3(-0.030488f, 9.38198f, -3.77537f);
	vertices[134].position = D3DXVECTOR3(-0.166138f, 9.86758f, -3.77537f);
	vertices[135].position = D3DXVECTOR3(-0.030488f, 9.38198f, -4.57959f);
	vertices[136].position = D3DXVECTOR3(-0.030488f, 9.38198f, -3.77537f);
	vertices[137].position = D3DXVECTOR3(-0.147745f, 9.80174f, -4.57959f);
	vertices[138].position = D3DXVECTOR3(0.071249f, 9.4104f, -3.77537f);
	vertices[139].position = D3DXVECTOR3(-0.030488f, 9.38198f, -4.57959f);
	vertices[140].position = D3DXVECTOR3(0.071249f, 9.4104f, -4.57959f);
	vertices[141].position = D3DXVECTOR3(-0.030488f, 9.38198f, -3.77537f);
	vertices[142].position = D3DXVECTOR3(-0.030488f, 9.38198f, -4.57959f);
	vertices[143].position = D3DXVECTOR3(0.071249f, 9.4104f, -3.77537f);
	vertices[144].position = D3DXVECTOR3(-0.046008f, 9.83016f, -4.57959f);
	vertices[145].position = D3DXVECTOR3(-0.166138f, 9.86758f, -3.77537f);
	vertices[146].position = D3DXVECTOR3(-0.064401f, 9.896f, -3.77537f);
	vertices[147].position = D3DXVECTOR3(-0.147745f, 9.80174f, -4.57959f);
	vertices[148].position = D3DXVECTOR3(-0.166138f, 9.86758f, -3.77537f);
	vertices[149].position = D3DXVECTOR3(-0.046008f, 9.83016f, -4.57959f);
	vertices[150].position = D3DXVECTOR3(-0.064401f, 9.896f, -3.77537f);
	vertices[151].position = D3DXVECTOR3(-0.176484f, 9.90462f, -3.10006f);
	vertices[152].position = D3DXVECTOR3(-0.074747f, 9.93304f, -3.10006f);
	vertices[153].position = D3DXVECTOR3(-0.166138f, 9.86758f, -3.77537f);
	vertices[154].position = D3DXVECTOR3(-0.176484f, 9.90462f, -3.10006f);
	vertices[155].position = D3DXVECTOR3(-0.064401f, 9.896f, -3.77537f);
	vertices[156].position = D3DXVECTOR3(-0.166138f, 9.86758f, -3.77537f);
	vertices[157].position = D3DXVECTOR3(-0.030488f, 9.38198f, -3.10006f);
	vertices[158].position = D3DXVECTOR3(-0.176484f, 9.90462f, -3.10006f);
	vertices[159].position = D3DXVECTOR3(-0.030488f, 9.38198f, -3.77537f);
	vertices[160].position = D3DXVECTOR3(-0.030488f, 9.38198f, -3.10006f);
	vertices[161].position = D3DXVECTOR3(-0.166138f, 9.86758f, -3.77537f);
	vertices[162].position = D3DXVECTOR3(-0.030488f, 9.38198f, -3.10006f);
	vertices[163].position = D3DXVECTOR3(0.071249f, 9.4104f, -3.77537f);
	vertices[164].position = D3DXVECTOR3(0.071249f, 9.4104f, -3.10006f);
	vertices[165].position = D3DXVECTOR3(-0.030488f, 9.38198f, -3.77537f);
	vertices[166].position = D3DXVECTOR3(0.071249f, 9.4104f, -3.77537f);
	vertices[167].position = D3DXVECTOR3(-0.030488f, 9.38198f, -3.10006f);
	vertices[168].position = D3DXVECTOR3(-0.064401f, 9.896f, -3.77537f);
	vertices[169].position = D3DXVECTOR3(0.071249f, 9.4104f, -3.10006f);
	vertices[170].position = D3DXVECTOR3(0.071249f, 9.4104f, -3.77537f);
	vertices[171].position = D3DXVECTOR3(-0.074747f, 9.93304f, -3.10006f);
	vertices[172].position = D3DXVECTOR3(0.071249f, 9.4104f, -3.10006f);
	vertices[173].position = D3DXVECTOR3(-0.064401f, 9.896f, -3.77537f);
	vertices[174].position = D3DXVECTOR3(-0.046008f, 9.83016f, -1.72256f);
	vertices[175].position = D3DXVECTOR3(0.071249f, 9.4104f, -2.42476f);
	vertices[176].position = D3DXVECTOR3(-0.064401f, 9.896f, -2.42476f);
	vertices[177].position = D3DXVECTOR3(0.071249f, 9.4104f, -1.72256f);
	vertices[178].position = D3DXVECTOR3(0.071249f, 9.4104f, -2.42476f);
	vertices[179].position = D3DXVECTOR3(-0.046008f, 9.83016f, -1.72256f);
	vertices[180].position = D3DXVECTOR3(-0.030488f, 9.38198f, -2.42476f);
	vertices[181].position = D3DXVECTOR3(-0.147745f, 9.80174f, -1.72256f);
	vertices[182].position = D3DXVECTOR3(-0.166138f, 9.86758f, -2.42476f);
	vertices[183].position = D3DXVECTOR3(-0.030488f, 9.38198f, -1.72256f);
	vertices[184].position = D3DXVECTOR3(-0.147745f, 9.80174f, -1.72256f);
	vertices[185].position = D3DXVECTOR3(-0.030488f, 9.38198f, -2.42476f);
	vertices[186].position = D3DXVECTOR3(0.071249f, 9.4104f, -2.42476f);
	vertices[187].position = D3DXVECTOR3(-0.030488f, 9.38198f, -1.72256f);
	vertices[188].position = D3DXVECTOR3(-0.030488f, 9.38198f, -2.42476f);
	vertices[189].position = D3DXVECTOR3(0.071249f, 9.4104f, -1.72256f);
	vertices[190].position = D3DXVECTOR3(-0.030488f, 9.38198f, -1.72256f);
	vertices[191].position = D3DXVECTOR3(0.071249f, 9.4104f, -2.42476f);
	vertices[192].position = D3DXVECTOR3(-0.046008f, 9.83016f, -1.72256f);
	vertices[193].position = D3DXVECTOR3(-0.166138f, 9.86758f, -2.42476f);
	vertices[194].position = D3DXVECTOR3(-0.147745f, 9.80174f, -1.72256f);
	vertices[195].position = D3DXVECTOR3(-0.064401f, 9.896f, -2.42476f);
	vertices[196].position = D3DXVECTOR3(-0.166138f, 9.86758f, -2.42476f);
	vertices[197].position = D3DXVECTOR3(-0.046008f, 9.83016f, -1.72256f);
	vertices[198].position = D3DXVECTOR3(-0.064401f, 9.896f, -2.42476f);
	vertices[199].position = D3DXVECTOR3(-0.176484f, 9.90462f, -3.10006f);
	vertices[200].position = D3DXVECTOR3(-0.166138f, 9.86758f, -2.42476f);
	vertices[201].position = D3DXVECTOR3(-0.074747f, 9.93304f, -3.10006f);
	vertices[202].position = D3DXVECTOR3(-0.176484f, 9.90462f, -3.10006f);
	vertices[203].position = D3DXVECTOR3(-0.064401f, 9.896f, -2.42476f);
	vertices[204].position = D3DXVECTOR3(-0.030488f, 9.38198f, -3.10006f);
	vertices[205].position = D3DXVECTOR3(-0.166138f, 9.86758f, -2.42476f);
	vertices[206].position = D3DXVECTOR3(-0.176484f, 9.90462f, -3.10006f);
	vertices[207].position = D3DXVECTOR3(-0.030488f, 9.38198f, -2.42476f);
	vertices[208].position = D3DXVECTOR3(-0.166138f, 9.86758f, -2.42476f);
	vertices[209].position = D3DXVECTOR3(-0.030488f, 9.38198f, -3.10006f);
	vertices[210].position = D3DXVECTOR3(-0.030488f, 9.38198f, -3.10006f);
	vertices[211].position = D3DXVECTOR3(0.071249f, 9.4104f, -2.42476f);
	vertices[212].position = D3DXVECTOR3(-0.030488f, 9.38198f, -2.42476f);
	vertices[213].position = D3DXVECTOR3(0.071249f, 9.4104f, -3.10006f);
	vertices[214].position = D3DXVECTOR3(0.071249f, 9.4104f, -2.42476f);
	vertices[215].position = D3DXVECTOR3(-0.030488f, 9.38198f, -3.10006f);
	vertices[216].position = D3DXVECTOR3(-0.064401f, 9.896f, -2.42476f);
	vertices[217].position = D3DXVECTOR3(0.071249f, 9.4104f, -3.10006f);
	vertices[218].position = D3DXVECTOR3(-0.074747f, 9.93304f, -3.10006f);
	vertices[219].position = D3DXVECTOR3(0.071249f, 9.4104f, -2.42476f);
	vertices[220].position = D3DXVECTOR3(0.071249f, 9.4104f, -3.10006f);
	vertices[221].position = D3DXVECTOR3(-0.064401f, 9.896f, -2.42476f);
	vertices[222].position = D3DXVECTOR3(-0.317428f, 11.0326f, -1.70541f);
	vertices[223].position = D3DXVECTOR3(-0.200171f, 10.6129f, -2.42476f);
	vertices[224].position = D3DXVECTOR3(-0.335821f, 11.0985f, -2.42476f);
	vertices[225].position = D3DXVECTOR3(-0.200171f, 10.6129f, -1.70541f);
	vertices[226].position = D3DXVECTOR3(-0.200171f, 10.6129f, -2.42476f);
	vertices[227].position = D3DXVECTOR3(-0.317428f, 11.0326f, -1.70541f);
	vertices[228].position = D3DXVECTOR3(-0.301908f, 10.5845f, -2.42476f);
	vertices[229].position = D3DXVECTOR3(-0.419165f, 11.0042f, -1.70541f);
	vertices[230].position = D3DXVECTOR3(-0.437558f, 11.0701f, -2.42476f);
	vertices[231].position = D3DXVECTOR3(-0.301908f, 10.5845f, -1.70541f);
	vertices[232].position = D3DXVECTOR3(-0.419165f, 11.0042f, -1.70541f);
	vertices[233].position = D3DXVECTOR3(-0.301908f, 10.5845f, -2.42476f);
	vertices[234].position = D3DXVECTOR3(-0.200171f, 10.6129f, -1.70541f);
	vertices[235].position = D3DXVECTOR3(-0.301908f, 10.5845f, -2.42476f);
	vertices[236].position = D3DXVECTOR3(-0.200171f, 10.6129f, -2.42476f);
	vertices[237].position = D3DXVECTOR3(-0.301908f, 10.5845f, -1.70541f);
	vertices[238].position = D3DXVECTOR3(-0.301908f, 10.5845f, -2.42476f);
	vertices[239].position = D3DXVECTOR3(-0.200171f, 10.6129f, -1.70541f);
	vertices[240].position = D3DXVECTOR3(-0.437558f, 11.0701f, -2.42476f);
	vertices[241].position = D3DXVECTOR3(-0.317428f, 11.0326f, -1.70541f);
	vertices[242].position = D3DXVECTOR3(-0.335821f, 11.0985f, -2.42476f);
	vertices[243].position = D3DXVECTOR3(-0.419165f, 11.0042f, -1.70541f);
	vertices[244].position = D3DXVECTOR3(-0.317428f, 11.0326f, -1.70541f);
	vertices[245].position = D3DXVECTOR3(-0.437558f, 11.0701f, -2.42476f);
	vertices[246].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.10006f);
	vertices[247].position = D3DXVECTOR3(-0.437558f, 11.0701f, -2.42476f);
	vertices[248].position = D3DXVECTOR3(-0.447904f, 11.1071f, -3.10006f);
	vertices[249].position = D3DXVECTOR3(-0.301908f, 10.5845f, -2.42476f);
	vertices[250].position = D3DXVECTOR3(-0.437558f, 11.0701f, -2.42476f);
	vertices[251].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.10006f);
	vertices[252].position = D3DXVECTOR3(-0.419165f, 11.0042f, -4.54562f);
	vertices[253].position = D3DXVECTOR3(-0.335821f, 11.0985f, -3.77537f);
	vertices[254].position = D3DXVECTOR3(-0.317428f, 11.0326f, -4.54562f);
	vertices[255].position = D3DXVECTOR3(-0.437558f, 11.0701f, -3.77537f);
	vertices[256].position = D3DXVECTOR3(-0.335821f, 11.0985f, -3.77537f);
	vertices[257].position = D3DXVECTOR3(-0.419165f, 11.0042f, -4.54562f);
	vertices[258].position = D3DXVECTOR3(-0.317428f, 11.0326f, -4.54562f);
	vertices[259].position = D3DXVECTOR3(-0.200171f, 10.6129f, -3.77537f);
	vertices[260].position = D3DXVECTOR3(-0.200171f, 10.6129f, -4.54562f);
	vertices[261].position = D3DXVECTOR3(-0.335821f, 11.0985f, -3.77537f);
	vertices[262].position = D3DXVECTOR3(-0.200171f, 10.6129f, -3.77537f);
	vertices[263].position = D3DXVECTOR3(-0.317428f, 11.0326f, -4.54562f);
	vertices[264].position = D3DXVECTOR3(-0.419165f, 11.0042f, -4.54562f);
	vertices[265].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.77537f);
	vertices[266].position = D3DXVECTOR3(-0.437558f, 11.0701f, -3.77537f);
	vertices[267].position = D3DXVECTOR3(-0.301908f, 10.5845f, -4.54562f);
	vertices[268].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.77537f);
	vertices[269].position = D3DXVECTOR3(-0.419165f, 11.0042f, -4.54562f);
	vertices[270].position = D3DXVECTOR3(-0.346167f, 11.1355f, -3.10006f);
	vertices[271].position = D3DXVECTOR3(-0.437558f, 11.0701f, -3.77537f);
	vertices[272].position = D3DXVECTOR3(-0.447904f, 11.1071f, -3.10006f);
	vertices[273].position = D3DXVECTOR3(-0.335821f, 11.0985f, -3.77537f);
	vertices[274].position = D3DXVECTOR3(-0.437558f, 11.0701f, -3.77537f);
	vertices[275].position = D3DXVECTOR3(-0.346167f, 11.1355f, -3.10006f);
	vertices[276].position = D3DXVECTOR3(-0.437558f, 11.0701f, -3.77537f);
	vertices[277].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.10006f);
	vertices[278].position = D3DXVECTOR3(-0.447904f, 11.1071f, -3.10006f);
	vertices[279].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.77537f);
	vertices[280].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.10006f);
	vertices[281].position = D3DXVECTOR3(-0.437558f, 11.0701f, -3.77537f);
	vertices[282].position = D3DXVECTOR3(-0.335821f, 11.0985f, -3.77537f);
	vertices[283].position = D3DXVECTOR3(-0.200171f, 10.6129f, -3.10006f);
	vertices[284].position = D3DXVECTOR3(-0.200171f, 10.6129f, -3.77537f);
	vertices[285].position = D3DXVECTOR3(-0.346167f, 11.1355f, -3.10006f);
	vertices[286].position = D3DXVECTOR3(-0.200171f, 10.6129f, -3.10006f);
	vertices[287].position = D3DXVECTOR3(-0.335821f, 11.0985f, -3.77537f);
	vertices[288].position = D3DXVECTOR3(-0.437558f, 11.0701f, -2.42476f);
	vertices[289].position = D3DXVECTOR3(-0.346167f, 11.1355f, -3.10006f);
	vertices[290].position = D3DXVECTOR3(-0.447904f, 11.1071f, -3.10006f);
	vertices[291].position = D3DXVECTOR3(-0.335821f, 11.0985f, -2.42476f);
	vertices[292].position = D3DXVECTOR3(-0.346167f, 11.1355f, -3.10006f);
	vertices[293].position = D3DXVECTOR3(-0.437558f, 11.0701f, -2.42476f);
	vertices[294].position = D3DXVECTOR3(-0.335821f, 11.0985f, -2.42476f);
	vertices[295].position = D3DXVECTOR3(-0.200171f, 10.6129f, -3.10006f);
	vertices[296].position = D3DXVECTOR3(-0.346167f, 11.1355f, -3.10006f);
	vertices[297].position = D3DXVECTOR3(-0.200171f, 10.6129f, -2.42476f);
	vertices[298].position = D3DXVECTOR3(-0.200171f, 10.6129f, -3.10006f);
	vertices[299].position = D3DXVECTOR3(-0.335821f, 11.0985f, -2.42476f);
	vertices[300].position = D3DXVECTOR3(-0.200171f, 10.6129f, -2.42476f);
	vertices[301].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.10006f);
	vertices[302].position = D3DXVECTOR3(-0.200171f, 10.6129f, -3.10006f);
	vertices[303].position = D3DXVECTOR3(-0.301908f, 10.5845f, -2.42476f);
	vertices[304].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.10006f);
	vertices[305].position = D3DXVECTOR3(-0.200171f, 10.6129f, -2.42476f);
	vertices[306].position = D3DXVECTOR3(-0.200171f, 10.6129f, -3.77537f);
	vertices[307].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.10006f);
	vertices[308].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.77537f);
	vertices[309].position = D3DXVECTOR3(-0.200171f, 10.6129f, -3.10006f);
	vertices[310].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.10006f);
	vertices[311].position = D3DXVECTOR3(-0.200171f, 10.6129f, -3.77537f);
	vertices[312].position = D3DXVECTOR3(-0.200171f, 10.6129f, -4.54562f);
	vertices[313].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.77537f);
	vertices[314].position = D3DXVECTOR3(-0.301908f, 10.5845f, -4.54562f);
	vertices[315].position = D3DXVECTOR3(-0.200171f, 10.6129f, -3.77537f);
	vertices[316].position = D3DXVECTOR3(-0.301908f, 10.5845f, -3.77537f);
	vertices[317].position = D3DXVECTOR3(-0.200171f, 10.6129f, -4.54562f);
	vertices[318].position = D3DXVECTOR3(0.91949f, 5.50444f, -4.5536f);
	vertices[319].position = D3DXVECTOR3(0.894599f, 6.00293f, -1.6017f);
	vertices[320].position = D3DXVECTOR3(0.894599f, 6.00293f, -4.5536f);
	vertices[321].position = D3DXVECTOR3(0.91949f, 5.50444f, -1.6017f);
	vertices[322].position = D3DXVECTOR3(0.894599f, 6.00293f, -1.6017f);
	vertices[323].position = D3DXVECTOR3(0.91949f, 5.50444f, -4.5536f);
	vertices[324].position = D3DXVECTOR3(0.91949f, 5.50444f, -1.6017f);
	vertices[325].position = D3DXVECTOR3(4.94433f, 6.20069f, -1.3576f);
	vertices[326].position = D3DXVECTOR3(0.894599f, 6.00293f, -1.6017f);
	vertices[327].position = D3DXVECTOR3(4.96922f, 5.7022f, -1.3576f);
	vertices[328].position = D3DXVECTOR3(4.94433f, 6.20069f, -1.3576f);
	vertices[329].position = D3DXVECTOR3(0.91949f, 5.50444f, -1.6017f);
	vertices[330].position = D3DXVECTOR3(4.96922f, 5.7022f, -1.3576f);
	vertices[331].position = D3DXVECTOR3(4.94433f, 6.20069f, -4.7977f);
	vertices[332].position = D3DXVECTOR3(4.94433f, 6.20069f, -1.3576f);
	vertices[333].position = D3DXVECTOR3(4.96922f, 5.7022f, -4.7977f);
	vertices[334].position = D3DXVECTOR3(4.94433f, 6.20069f, -4.7977f);
	vertices[335].position = D3DXVECTOR3(4.96922f, 5.7022f, -1.3576f);
	vertices[336].position = D3DXVECTOR3(4.96922f, 5.7022f, -4.7977f);
	vertices[337].position = D3DXVECTOR3(0.894599f, 6.00293f, -4.5536f);
	vertices[338].position = D3DXVECTOR3(4.94433f, 6.20069f, -4.7977f);
	vertices[339].position = D3DXVECTOR3(0.91949f, 5.50444f, -4.5536f);
	vertices[340].position = D3DXVECTOR3(0.894599f, 6.00293f, -4.5536f);
	vertices[341].position = D3DXVECTOR3(4.96922f, 5.7022f, -4.7977f);
	vertices[342].position = D3DXVECTOR3(5.30697f, 6.31667f, -1.47895f);
	vertices[343].position = D3DXVECTOR3(5.43388f, 1.60939f, -1.16649f);
	vertices[344].position = D3DXVECTOR3(5.43775f, 1.60555f, -1.4764f);
	vertices[345].position = D3DXVECTOR3(5.3031f, 6.32052f, -1.16905f);
	vertices[346].position = D3DXVECTOR3(5.43388f, 1.60939f, -1.16649f);
	vertices[347].position = D3DXVECTOR3(5.30697f, 6.31667f, -1.47895f);
	vertices[348].position = D3DXVECTOR3(4.95041f, 6.30953f, -1.17331f);
	vertices[349].position = D3DXVECTOR3(5.43388f, 1.60939f, -1.16649f);
	vertices[350].position = D3DXVECTOR3(5.3031f, 6.32052f, -1.16905f);
	vertices[351].position = D3DXVECTOR3(5.13516f, 1.60009f, -1.17011f);
	vertices[352].position = D3DXVECTOR3(5.43388f, 1.60939f, -1.16649f);
	vertices[353].position = D3DXVECTOR3(4.95041f, 6.30953f, -1.17331f);
	vertices[354].position = D3DXVECTOR3(4.95428f, 6.30568f, -1.48321f);
	vertices[355].position = D3DXVECTOR3(5.13516f, 1.60009f, -1.17011f);
	vertices[356].position = D3DXVECTOR3(4.95041f, 6.30953f, -1.17331f);
	vertices[357].position = D3DXVECTOR3(5.13903f, 1.59624f, -1.48001f);
	vertices[358].position = D3DXVECTOR3(5.13516f, 1.60009f, -1.17011f);
	vertices[359].position = D3DXVECTOR3(4.95428f, 6.30568f, -1.48321f);
	vertices[360].position = D3DXVECTOR3(5.30697f, 6.31667f, -1.47895f);
	vertices[361].position = D3DXVECTOR3(5.13903f, 1.59624f, -1.48001f);
	vertices[362].position = D3DXVECTOR3(4.95428f, 6.30568f, -1.48321f);
	vertices[363].position = D3DXVECTOR3(5.43775f, 1.60555f, -1.4764f);
	vertices[364].position = D3DXVECTOR3(5.13903f, 1.59624f, -1.48001f);
	vertices[365].position = D3DXVECTOR3(5.30697f, 6.31667f, -1.47895f);
	vertices[366].position = D3DXVECTOR3(0.748401f, 3.06534f, -1.44729f);
	vertices[367].position = D3DXVECTOR3(5.16979f, 2.74233f, -1.20995f);
	vertices[368].position = D3DXVECTOR3(5.16979f, 3.103f, -1.20995f);
	vertices[369].position = D3DXVECTOR3(0.71586f, 2.70467f, -1.44729f);
	vertices[370].position = D3DXVECTOR3(5.16979f, 2.74233f, -1.20995f);
	vertices[371].position = D3DXVECTOR3(0.748401f, 3.06534f, -1.44729f);
	vertices[372].position = D3DXVECTOR3(0.748401f, 3.06534f, -1.67675f);
	vertices[373].position = D3DXVECTOR3(5.16979f, 2.74233f, -1.43941f);
	vertices[374].position = D3DXVECTOR3(0.71586f, 2.70467f, -1.67675f);
	vertices[375].position = D3DXVECTOR3(5.16979f, 3.103f, -1.43941f);
	vertices[376].position = D3DXVECTOR3(5.16979f, 2.74233f, -1.43941f);
	vertices[377].position = D3DXVECTOR3(0.748401f, 3.06534f, -1.67675f);
	vertices[378].position = D3DXVECTOR3(5.16979f, 2.74233f, -1.43941f);
	vertices[379].position = D3DXVECTOR3(0.71586f, 2.70467f, -1.44729f);
	vertices[380].position = D3DXVECTOR3(0.71586f, 2.70467f, -1.67675f);
	vertices[381].position = D3DXVECTOR3(5.16979f, 2.74233f, -1.20995f);
	vertices[382].position = D3DXVECTOR3(0.71586f, 2.70467f, -1.44729f);
	vertices[383].position = D3DXVECTOR3(5.16979f, 2.74233f, -1.43941f);
	vertices[384].position = D3DXVECTOR3(0.748401f, 3.06534f, -1.44729f);
	vertices[385].position = D3DXVECTOR3(5.16979f, 3.103f, -1.43941f);
	vertices[386].position = D3DXVECTOR3(0.748401f, 3.06534f, -1.67675f);
	vertices[387].position = D3DXVECTOR3(5.16979f, 3.103f, -1.20995f);
	vertices[388].position = D3DXVECTOR3(5.16979f, 3.103f, -1.43941f);
	vertices[389].position = D3DXVECTOR3(0.748401f, 3.06534f, -1.44729f);
	vertices[390].position = D3DXVECTOR3(0.962884f, 6.08537f, -1.41441f);
	vertices[391].position = D3DXVECTOR3(0.98172f, 5.44863f, -1.73046f);
	vertices[392].position = D3DXVECTOR3(0.962884f, 6.08537f, -1.73046f);
	vertices[393].position = D3DXVECTOR3(0.98172f, 5.44863f, -1.41441f);
	vertices[394].position = D3DXVECTOR3(0.98172f, 5.44863f, -1.73046f);
	vertices[395].position = D3DXVECTOR3(0.962884f, 6.08537f, -1.41441f);
	vertices[396].position = D3DXVECTOR3(0.962884f, 6.08537f, -1.41441f);
	vertices[397].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.41441f);
	vertices[398].position = D3DXVECTOR3(0.98172f, 5.44863f, -1.41441f);
	vertices[399].position = D3DXVECTOR3(0.515507f, 6.08537f, -1.41441f);
	vertices[400].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.41441f);
	vertices[401].position = D3DXVECTOR3(0.962884f, 6.08537f, -1.41441f);
	vertices[402].position = D3DXVECTOR3(0.515507f, 6.08537f, -1.73046f);
	vertices[403].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.41441f);
	vertices[404].position = D3DXVECTOR3(0.515507f, 6.08537f, -1.41441f);
	vertices[405].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.73046f);
	vertices[406].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.41441f);
	vertices[407].position = D3DXVECTOR3(0.515507f, 6.08537f, -1.73046f);
	vertices[408].position = D3DXVECTOR3(0.962884f, 6.08537f, -1.73046f);
	vertices[409].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.73046f);
	vertices[410].position = D3DXVECTOR3(0.515507f, 6.08537f, -1.73046f);
	vertices[411].position = D3DXVECTOR3(0.98172f, 5.44863f, -1.73046f);
	vertices[412].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.73046f);
	vertices[413].position = D3DXVECTOR3(0.962884f, 6.08537f, -1.73046f);
	vertices[414].position = D3DXVECTOR3(-0.563682f, 11.1427f, -1.41441f);
	vertices[415].position = D3DXVECTOR3(-0.242993f, 11.2089f, -1.73046f);
	vertices[416].position = D3DXVECTOR3(-0.563682f, 11.1427f, -1.73046f);
	vertices[417].position = D3DXVECTOR3(-0.242993f, 11.2089f, -1.41441f);
	vertices[418].position = D3DXVECTOR3(-0.242993f, 11.2089f, -1.73046f);
	vertices[419].position = D3DXVECTOR3(-0.563682f, 11.1427f, -1.41441f);
	vertices[420].position = D3DXVECTOR3(0.515507f, 6.08537f, -1.73046f);
	vertices[421].position = D3DXVECTOR3(0.353026f, 8.55325f, -1.73046f);
	vertices[422].position = D3DXVECTOR3(0.962884f, 6.08537f, -1.73046f);
	vertices[423].position = D3DXVECTOR3(-0.0015f, 8.55325f, -1.73046f);
	vertices[424].position = D3DXVECTOR3(0.353026f, 8.55325f, -1.73046f);
	vertices[425].position = D3DXVECTOR3(0.515507f, 6.08537f, -1.73046f);
	vertices[426].position = D3DXVECTOR3(0.353026f, 8.55325f, -1.73046f);
	vertices[427].position = D3DXVECTOR3(0.962884f, 6.08537f, -1.41441f);
	vertices[428].position = D3DXVECTOR3(0.962884f, 6.08537f, -1.73046f);
	vertices[429].position = D3DXVECTOR3(0.353026f, 8.55325f, -1.41441f);
	vertices[430].position = D3DXVECTOR3(0.962884f, 6.08537f, -1.41441f);
	vertices[431].position = D3DXVECTOR3(0.353026f, 8.55325f, -1.73046f);
	vertices[432].position = D3DXVECTOR3(0.353026f, 8.55325f, -1.41441f);
	vertices[433].position = D3DXVECTOR3(0.515507f, 6.08537f, -1.41441f);
	vertices[434].position = D3DXVECTOR3(0.962884f, 6.08537f, -1.41441f);
	vertices[435].position = D3DXVECTOR3(-0.0015f, 8.55325f, -1.41441f);
	vertices[436].position = D3DXVECTOR3(0.515507f, 6.08537f, -1.41441f);
	vertices[437].position = D3DXVECTOR3(0.353026f, 8.55325f, -1.41441f);
	vertices[438].position = D3DXVECTOR3(-0.0015f, 8.55325f, -1.41441f);
	vertices[439].position = D3DXVECTOR3(0.515507f, 6.08537f, -1.73046f);
	vertices[440].position = D3DXVECTOR3(0.515507f, 6.08537f, -1.41441f);
	vertices[441].position = D3DXVECTOR3(-0.0015f, 8.55325f, -1.73046f);
	vertices[442].position = D3DXVECTOR3(0.515507f, 6.08537f, -1.73046f);
	vertices[443].position = D3DXVECTOR3(-0.0015f, 8.55325f, -1.41441f);
	vertices[444].position = D3DXVECTOR3(-0.0015f, 8.55325f, -1.73046f);
	vertices[445].position = D3DXVECTOR3(-0.242993f, 11.2089f, -1.73046f);
	vertices[446].position = D3DXVECTOR3(0.353026f, 8.55325f, -1.73046f);
	vertices[447].position = D3DXVECTOR3(-0.563682f, 11.1427f, -1.73046f);
	vertices[448].position = D3DXVECTOR3(-0.242993f, 11.2089f, -1.73046f);
	vertices[449].position = D3DXVECTOR3(-0.0015f, 8.55325f, -1.73046f);
	vertices[450].position = D3DXVECTOR3(-0.242993f, 11.2089f, -1.73046f);
	vertices[451].position = D3DXVECTOR3(0.353026f, 8.55325f, -1.41441f);
	vertices[452].position = D3DXVECTOR3(0.353026f, 8.55325f, -1.73046f);
	vertices[453].position = D3DXVECTOR3(-0.242993f, 11.2089f, -1.41441f);
	vertices[454].position = D3DXVECTOR3(0.353026f, 8.55325f, -1.41441f);
	vertices[455].position = D3DXVECTOR3(-0.242993f, 11.2089f, -1.73046f);
	vertices[456].position = D3DXVECTOR3(-0.242993f, 11.2089f, -1.41441f);
	vertices[457].position = D3DXVECTOR3(-0.0015f, 8.55325f, -1.41441f);
	vertices[458].position = D3DXVECTOR3(0.353026f, 8.55325f, -1.41441f);
	vertices[459].position = D3DXVECTOR3(-0.563682f, 11.1427f, -1.41441f);
	vertices[460].position = D3DXVECTOR3(-0.0015f, 8.55325f, -1.41441f);
	vertices[461].position = D3DXVECTOR3(-0.242993f, 11.2089f, -1.41441f);
	vertices[462].position = D3DXVECTOR3(-0.563682f, 11.1427f, -1.41441f);
	vertices[463].position = D3DXVECTOR3(-0.0015f, 8.55325f, -1.73046f);
	vertices[464].position = D3DXVECTOR3(-0.0015f, 8.55325f, -1.41441f);
	vertices[465].position = D3DXVECTOR3(-0.563682f, 11.1427f, -1.73046f);
	vertices[466].position = D3DXVECTOR3(-0.0015f, 8.55325f, -1.73046f);
	vertices[467].position = D3DXVECTOR3(-0.563682f, 11.1427f, -1.41441f);
	vertices[468].position = D3DXVECTOR3(0.854924f, 4.05915f, -1.73046f);
	vertices[469].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.73046f);
	vertices[470].position = D3DXVECTOR3(0.98172f, 5.44863f, -1.73046f);
	vertices[471].position = D3DXVECTOR3(0.478881f, 4.05509f, -1.73046f);
	vertices[472].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.73046f);
	vertices[473].position = D3DXVECTOR3(0.854924f, 4.05915f, -1.73046f);
	vertices[474].position = D3DXVECTOR3(0.478881f, 4.05509f, -1.73046f);
	vertices[475].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.41441f);
	vertices[476].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.73046f);
	vertices[477].position = D3DXVECTOR3(0.478881f, 4.05509f, -1.41441f);
	vertices[478].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.41441f);
	vertices[479].position = D3DXVECTOR3(0.478881f, 4.05509f, -1.73046f);
	vertices[480].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.41441f);
	vertices[481].position = D3DXVECTOR3(0.854924f, 4.05915f, -1.41441f);
	vertices[482].position = D3DXVECTOR3(0.98172f, 5.44863f, -1.41441f);
	vertices[483].position = D3DXVECTOR3(0.478881f, 4.05509f, -1.41441f);
	vertices[484].position = D3DXVECTOR3(0.854924f, 4.05915f, -1.41441f);
	vertices[485].position = D3DXVECTOR3(0.515507f, 5.44863f, -1.41441f);
	vertices[486].position = D3DXVECTOR3(0.854924f, 4.05915f, -1.41441f);
	vertices[487].position = D3DXVECTOR3(0.98172f, 5.44863f, -1.73046f);
	vertices[488].position = D3DXVECTOR3(0.98172f, 5.44863f, -1.41441f);
	vertices[489].position = D3DXVECTOR3(0.854924f, 4.05915f, -1.73046f);
	vertices[490].position = D3DXVECTOR3(0.98172f, 5.44863f, -1.73046f);
	vertices[491].position = D3DXVECTOR3(0.854924f, 4.05915f, -1.41441f);
	vertices[492].position = D3DXVECTOR3(0.351211f, 1.6084f, -1.73046f);
	vertices[493].position = D3DXVECTOR3(0.403931f, 2.64687f, -1.41441f);
	vertices[494].position = D3DXVECTOR3(0.403931f, 2.64687f, -1.73046f);
	vertices[495].position = D3DXVECTOR3(0.351211f, 1.6084f, -1.41441f);
	vertices[496].position = D3DXVECTOR3(0.403931f, 2.64687f, -1.41441f);
	vertices[497].position = D3DXVECTOR3(0.351211f, 1.6084f, -1.73046f);
	vertices[498].position = D3DXVECTOR3(0.658937f, 1.6196f, -1.73046f);
	vertices[499].position = D3DXVECTOR3(0.403931f, 2.64687f, -1.73046f);
	vertices[500].position = D3DXVECTOR3(0.726792f, 2.65503f, -1.73046f);
	vertices[501].position = D3DXVECTOR3(0.351211f, 1.6084f, -1.73046f);
	vertices[502].position = D3DXVECTOR3(0.403931f, 2.64687f, -1.73046f);
	vertices[503].position = D3DXVECTOR3(0.658937f, 1.6196f, -1.73046f);
	vertices[504].position = D3DXVECTOR3(0.658937f, 1.6196f, -1.41441f);
	vertices[505].position = D3DXVECTOR3(0.726792f, 2.65503f, -1.73046f);
	vertices[506].position = D3DXVECTOR3(0.726792f, 2.65503f, -1.41441f);
	vertices[507].position = D3DXVECTOR3(0.658937f, 1.6196f, -1.73046f);
	vertices[508].position = D3DXVECTOR3(0.726792f, 2.65503f, -1.73046f);
	vertices[509].position = D3DXVECTOR3(0.658937f, 1.6196f, -1.41441f);
	vertices[510].position = D3DXVECTOR3(0.403931f, 2.64687f, -1.41441f);
	vertices[511].position = D3DXVECTOR3(0.658937f, 1.6196f, -1.41441f);
	vertices[512].position = D3DXVECTOR3(0.726792f, 2.65503f, -1.41441f);
	vertices[513].position = D3DXVECTOR3(0.351211f, 1.6084f, -1.41441f);
	vertices[514].position = D3DXVECTOR3(0.658937f, 1.6196f, -1.41441f);
	vertices[515].position = D3DXVECTOR3(0.403931f, 2.64687f, -1.41441f);
	vertices[516].position = D3DXVECTOR3(0.403931f, 2.64687f, -1.73046f);
	vertices[517].position = D3DXVECTOR3(0.478881f, 4.05509f, -1.41441f);
	vertices[518].position = D3DXVECTOR3(0.478881f, 4.05509f, -1.73046f);
	vertices[519].position = D3DXVECTOR3(0.403931f, 2.64687f, -1.41441f);
	vertices[520].position = D3DXVECTOR3(0.478881f, 4.05509f, -1.41441f);
	vertices[521].position = D3DXVECTOR3(0.403931f, 2.64687f, -1.73046f);
	vertices[522].position = D3DXVECTOR3(0.726792f, 2.65503f, -1.73046f);
	vertices[523].position = D3DXVECTOR3(0.478881f, 4.05509f, -1.73046f);
	vertices[524].position = D3DXVECTOR3(0.854924f, 4.05915f, -1.73046f);
	vertices[525].position = D3DXVECTOR3(0.403931f, 2.64687f, -1.73046f);
	vertices[526].position = D3DXVECTOR3(0.478881f, 4.05509f, -1.73046f);
	vertices[527].position = D3DXVECTOR3(0.726792f, 2.65503f, -1.73046f);
	vertices[528].position = D3DXVECTOR3(0.726792f, 2.65503f, -1.41441f);
	vertices[529].position = D3DXVECTOR3(0.854924f, 4.05915f, -1.73046f);
	vertices[530].position = D3DXVECTOR3(0.854924f, 4.05915f, -1.41441f);
	vertices[531].position = D3DXVECTOR3(0.726792f, 2.65503f, -1.73046f);
	vertices[532].position = D3DXVECTOR3(0.854924f, 4.05915f, -1.73046f);
	vertices[533].position = D3DXVECTOR3(0.726792f, 2.65503f, -1.41441f);
	vertices[534].position = D3DXVECTOR3(0.478881f, 4.05509f, -1.41441f);
	vertices[535].position = D3DXVECTOR3(0.726792f, 2.65503f, -1.41441f);
	vertices[536].position = D3DXVECTOR3(0.854924f, 4.05915f, -1.41441f);
	vertices[537].position = D3DXVECTOR3(0.403931f, 2.64687f, -1.41441f);
	vertices[538].position = D3DXVECTOR3(0.726792f, 2.65503f, -1.41441f);
	vertices[539].position = D3DXVECTOR3(0.478881f, 4.05509f, -1.41441f);
	vertices[540].position = D3DXVECTOR3(5.43388f, 1.60939f, -5.07957f);
	vertices[541].position = D3DXVECTOR3(5.30697f, 6.31667f, -4.76712f);
	vertices[542].position = D3DXVECTOR3(5.43775f, 1.60555f, -4.76967f);
	vertices[543].position = D3DXVECTOR3(5.43388f, 1.60939f, -5.07957f);
	vertices[544].position = D3DXVECTOR3(5.3031f, 6.32052f, -5.07701f);
	vertices[545].position = D3DXVECTOR3(5.30697f, 6.31667f, -4.76712f);
	vertices[546].position = D3DXVECTOR3(5.43388f, 1.60939f, -5.07957f);
	vertices[547].position = D3DXVECTOR3(4.95041f, 6.30953f, -5.07275f);
	vertices[548].position = D3DXVECTOR3(5.3031f, 6.32052f, -5.07701f);
	vertices[549].position = D3DXVECTOR3(5.43388f, 1.60939f, -5.07957f);
	vertices[550].position = D3DXVECTOR3(5.13516f, 1.60009f, -5.07595f);
	vertices[551].position = D3DXVECTOR3(4.95041f, 6.30953f, -5.07275f);
	vertices[552].position = D3DXVECTOR3(5.13516f, 1.60009f, -5.07595f);
	vertices[553].position = D3DXVECTOR3(4.95428f, 6.30568f, -4.76285f);
	vertices[554].position = D3DXVECTOR3(4.95041f, 6.30953f, -5.07275f);
	vertices[555].position = D3DXVECTOR3(5.13516f, 1.60009f, -5.07595f);
	vertices[556].position = D3DXVECTOR3(5.13903f, 1.59624f, -4.76606f);
	vertices[557].position = D3DXVECTOR3(4.95428f, 6.30568f, -4.76285f);
	vertices[558].position = D3DXVECTOR3(5.13903f, 1.59624f, -4.76606f);
	vertices[559].position = D3DXVECTOR3(5.30697f, 6.31667f, -4.76712f);
	vertices[560].position = D3DXVECTOR3(4.95428f, 6.30568f, -4.76285f);
	vertices[561].position = D3DXVECTOR3(5.13903f, 1.59624f, -4.76606f);
	vertices[562].position = D3DXVECTOR3(5.43775f, 1.60555f, -4.76967f);
	vertices[563].position = D3DXVECTOR3(5.30697f, 6.31667f, -4.76712f);
	vertices[564].position = D3DXVECTOR3(5.16979f, 2.74233f, -5.03611f);
	vertices[565].position = D3DXVECTOR3(0.748401f, 3.06534f, -4.79877f);
	vertices[566].position = D3DXVECTOR3(5.16979f, 3.103f, -5.03611f);
	vertices[567].position = D3DXVECTOR3(5.16979f, 2.74233f, -5.03611f);
	vertices[568].position = D3DXVECTOR3(0.71586f, 2.70467f, -4.79877f);
	vertices[569].position = D3DXVECTOR3(0.748401f, 3.06534f, -4.79877f);
	vertices[570].position = D3DXVECTOR3(5.16979f, 2.74233f, -4.80665f);
	vertices[571].position = D3DXVECTOR3(0.748401f, 3.06534f, -4.56931f);
	vertices[572].position = D3DXVECTOR3(0.71586f, 2.70467f, -4.56931f);
	vertices[573].position = D3DXVECTOR3(5.16979f, 2.74233f, -4.80665f);
	vertices[574].position = D3DXVECTOR3(5.16979f, 3.103f, -4.80665f);
	vertices[575].position = D3DXVECTOR3(0.748401f, 3.06534f, -4.56931f);
	vertices[576].position = D3DXVECTOR3(0.71586f, 2.70467f, -4.79877f);
	vertices[577].position = D3DXVECTOR3(5.16979f, 2.74233f, -4.80665f);
	vertices[578].position = D3DXVECTOR3(0.71586f, 2.70467f, -4.56931f);
	vertices[579].position = D3DXVECTOR3(0.71586f, 2.70467f, -4.79877f);
	vertices[580].position = D3DXVECTOR3(5.16979f, 2.74233f, -5.03611f);
	vertices[581].position = D3DXVECTOR3(5.16979f, 2.74233f, -4.80665f);
	vertices[582].position = D3DXVECTOR3(5.16979f, 3.103f, -4.80665f);
	vertices[583].position = D3DXVECTOR3(0.748401f, 3.06534f, -4.79877f);
	vertices[584].position = D3DXVECTOR3(0.748401f, 3.06534f, -4.56931f);
	vertices[585].position = D3DXVECTOR3(5.16979f, 3.103f, -4.80665f);
	vertices[586].position = D3DXVECTOR3(5.16979f, 3.103f, -5.03611f);
	vertices[587].position = D3DXVECTOR3(0.748401f, 3.06534f, -4.79877f);
	vertices[588].position = D3DXVECTOR3(0.98172f, 5.44863f, -4.5156f);
	vertices[589].position = D3DXVECTOR3(0.962884f, 6.08537f, -4.83165f);
	vertices[590].position = D3DXVECTOR3(0.962884f, 6.08537f, -4.5156f);
	vertices[591].position = D3DXVECTOR3(0.98172f, 5.44863f, -4.5156f);
	vertices[592].position = D3DXVECTOR3(0.98172f, 5.44863f, -4.83165f);
	vertices[593].position = D3DXVECTOR3(0.962884f, 6.08537f, -4.83165f);
	vertices[594].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.83165f);
	vertices[595].position = D3DXVECTOR3(0.962884f, 6.08537f, -4.83165f);
	vertices[596].position = D3DXVECTOR3(0.98172f, 5.44863f, -4.83165f);
	vertices[597].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.83165f);
	vertices[598].position = D3DXVECTOR3(0.515507f, 6.08537f, -4.83165f);
	vertices[599].position = D3DXVECTOR3(0.962884f, 6.08537f, -4.83165f);
	vertices[600].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.83165f);
	vertices[601].position = D3DXVECTOR3(0.515507f, 6.08537f, -4.5156f);
	vertices[602].position = D3DXVECTOR3(0.515507f, 6.08537f, -4.83165f);
	vertices[603].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.83165f);
	vertices[604].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.5156f);
	vertices[605].position = D3DXVECTOR3(0.515507f, 6.08537f, -4.5156f);
	vertices[606].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.5156f);
	vertices[607].position = D3DXVECTOR3(0.962884f, 6.08537f, -4.5156f);
	vertices[608].position = D3DXVECTOR3(0.515507f, 6.08537f, -4.5156f);
	vertices[609].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.5156f);
	vertices[610].position = D3DXVECTOR3(0.98172f, 5.44863f, -4.5156f);
	vertices[611].position = D3DXVECTOR3(0.962884f, 6.08537f, -4.5156f);
	vertices[612].position = D3DXVECTOR3(-0.242993f, 11.2089f, -4.5156f);
	vertices[613].position = D3DXVECTOR3(-0.563682f, 11.1427f, -4.83165f);
	vertices[614].position = D3DXVECTOR3(-0.563682f, 11.1427f, -4.5156f);
	vertices[615].position = D3DXVECTOR3(-0.242993f, 11.2089f, -4.5156f);
	vertices[616].position = D3DXVECTOR3(-0.242993f, 11.2089f, -4.83165f);
	vertices[617].position = D3DXVECTOR3(-0.563682f, 11.1427f, -4.83165f);
	vertices[618].position = D3DXVECTOR3(0.353026f, 8.55325f, -4.5156f);
	vertices[619].position = D3DXVECTOR3(0.515507f, 6.08537f, -4.5156f);
	vertices[620].position = D3DXVECTOR3(0.962884f, 6.08537f, -4.5156f);
	vertices[621].position = D3DXVECTOR3(0.353026f, 8.55325f, -4.5156f);
	vertices[622].position = D3DXVECTOR3(-0.0015f, 8.55325f, -4.5156f);
	vertices[623].position = D3DXVECTOR3(0.515507f, 6.08537f, -4.5156f);
	vertices[624].position = D3DXVECTOR3(0.962884f, 6.08537f, -4.83165f);
	vertices[625].position = D3DXVECTOR3(0.353026f, 8.55325f, -4.5156f);
	vertices[626].position = D3DXVECTOR3(0.962884f, 6.08537f, -4.5156f);
	vertices[627].position = D3DXVECTOR3(0.962884f, 6.08537f, -4.83165f);
	vertices[628].position = D3DXVECTOR3(0.353026f, 8.55325f, -4.83165f);
	vertices[629].position = D3DXVECTOR3(0.353026f, 8.55325f, -4.5156f);
	vertices[630].position = D3DXVECTOR3(0.515507f, 6.08537f, -4.83165f);
	vertices[631].position = D3DXVECTOR3(0.353026f, 8.55325f, -4.83165f);
	vertices[632].position = D3DXVECTOR3(0.962884f, 6.08537f, -4.83165f);
	vertices[633].position = D3DXVECTOR3(0.515507f, 6.08537f, -4.83165f);
	vertices[634].position = D3DXVECTOR3(-0.0015f, 8.55325f, -4.83165f);
	vertices[635].position = D3DXVECTOR3(0.353026f, 8.55325f, -4.83165f);
	vertices[636].position = D3DXVECTOR3(0.515507f, 6.08537f, -4.5156f);
	vertices[637].position = D3DXVECTOR3(-0.0015f, 8.55325f, -4.83165f);
	vertices[638].position = D3DXVECTOR3(0.515507f, 6.08537f, -4.83165f);
	vertices[639].position = D3DXVECTOR3(0.515507f, 6.08537f, -4.5156f);
	vertices[640].position = D3DXVECTOR3(-0.0015f, 8.55325f, -4.5156f);
	vertices[641].position = D3DXVECTOR3(-0.0015f, 8.55325f, -4.83165f);
	vertices[642].position = D3DXVECTOR3(-0.242993f, 11.2089f, -4.5156f);
	vertices[643].position = D3DXVECTOR3(-0.0015f, 8.55325f, -4.5156f);
	vertices[644].position = D3DXVECTOR3(0.353026f, 8.55325f, -4.5156f);
	vertices[645].position = D3DXVECTOR3(-0.242993f, 11.2089f, -4.5156f);
	vertices[646].position = D3DXVECTOR3(-0.563682f, 11.1427f, -4.5156f);
	vertices[647].position = D3DXVECTOR3(-0.0015f, 8.55325f, -4.5156f);
	vertices[648].position = D3DXVECTOR3(0.353026f, 8.55325f, -4.83165f);
	vertices[649].position = D3DXVECTOR3(-0.242993f, 11.2089f, -4.5156f);
	vertices[650].position = D3DXVECTOR3(0.353026f, 8.55325f, -4.5156f);
	vertices[651].position = D3DXVECTOR3(0.353026f, 8.55325f, -4.83165f);
	vertices[652].position = D3DXVECTOR3(-0.242993f, 11.2089f, -4.83165f);
	vertices[653].position = D3DXVECTOR3(-0.242993f, 11.2089f, -4.5156f);
	vertices[654].position = D3DXVECTOR3(-0.0015f, 8.55325f, -4.83165f);
	vertices[655].position = D3DXVECTOR3(-0.242993f, 11.2089f, -4.83165f);
	vertices[656].position = D3DXVECTOR3(0.353026f, 8.55325f, -4.83165f);
	vertices[657].position = D3DXVECTOR3(-0.0015f, 8.55325f, -4.83165f);
	vertices[658].position = D3DXVECTOR3(-0.563682f, 11.1427f, -4.83165f);
	vertices[659].position = D3DXVECTOR3(-0.242993f, 11.2089f, -4.83165f);
	vertices[660].position = D3DXVECTOR3(-0.0015f, 8.55325f, -4.5156f);
	vertices[661].position = D3DXVECTOR3(-0.563682f, 11.1427f, -4.83165f);
	vertices[662].position = D3DXVECTOR3(-0.0015f, 8.55325f, -4.83165f);
	vertices[663].position = D3DXVECTOR3(-0.0015f, 8.55325f, -4.5156f);
	vertices[664].position = D3DXVECTOR3(-0.563682f, 11.1427f, -4.5156f);
	vertices[665].position = D3DXVECTOR3(-0.563682f, 11.1427f, -4.83165f);
	vertices[666].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.5156f);
	vertices[667].position = D3DXVECTOR3(0.854924f, 4.05915f, -4.5156f);
	vertices[668].position = D3DXVECTOR3(0.98172f, 5.44863f, -4.5156f);
	vertices[669].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.5156f);
	vertices[670].position = D3DXVECTOR3(0.478881f, 4.05509f, -4.5156f);
	vertices[671].position = D3DXVECTOR3(0.854924f, 4.05915f, -4.5156f);
	vertices[672].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.83165f);
	vertices[673].position = D3DXVECTOR3(0.478881f, 4.05509f, -4.5156f);
	vertices[674].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.5156f);
	vertices[675].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.83165f);
	vertices[676].position = D3DXVECTOR3(0.478881f, 4.05509f, -4.83165f);
	vertices[677].position = D3DXVECTOR3(0.478881f, 4.05509f, -4.5156f);
	vertices[678].position = D3DXVECTOR3(0.854924f, 4.05915f, -4.83165f);
	vertices[679].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.83165f);
	vertices[680].position = D3DXVECTOR3(0.98172f, 5.44863f, -4.83165f);
	vertices[681].position = D3DXVECTOR3(0.854924f, 4.05915f, -4.83165f);
	vertices[682].position = D3DXVECTOR3(0.478881f, 4.05509f, -4.83165f);
	vertices[683].position = D3DXVECTOR3(0.515507f, 5.44863f, -4.83165f);
	vertices[684].position = D3DXVECTOR3(0.98172f, 5.44863f, -4.5156f);
	vertices[685].position = D3DXVECTOR3(0.854924f, 4.05915f, -4.83165f);
	vertices[686].position = D3DXVECTOR3(0.98172f, 5.44863f, -4.83165f);
	vertices[687].position = D3DXVECTOR3(0.98172f, 5.44863f, -4.5156f);
	vertices[688].position = D3DXVECTOR3(0.854924f, 4.05915f, -4.5156f);
	vertices[689].position = D3DXVECTOR3(0.854924f, 4.05915f, -4.83165f);
	vertices[690].position = D3DXVECTOR3(0.403931f, 2.64687f, -4.83165f);
	vertices[691].position = D3DXVECTOR3(0.351211f, 1.6084f, -4.5156f);
	vertices[692].position = D3DXVECTOR3(0.403931f, 2.64687f, -4.5156f);
	vertices[693].position = D3DXVECTOR3(0.403931f, 2.64687f, -4.83165f);
	vertices[694].position = D3DXVECTOR3(0.351211f, 1.6084f, -4.83165f);
	vertices[695].position = D3DXVECTOR3(0.351211f, 1.6084f, -4.5156f);
	vertices[696].position = D3DXVECTOR3(0.403931f, 2.64687f, -4.5156f);
	vertices[697].position = D3DXVECTOR3(0.658937f, 1.6196f, -4.5156f);
	vertices[698].position = D3DXVECTOR3(0.726792f, 2.65503f, -4.5156f);
	vertices[699].position = D3DXVECTOR3(0.403931f, 2.64687f, -4.5156f);
	vertices[700].position = D3DXVECTOR3(0.351211f, 1.6084f, -4.5156f);
	vertices[701].position = D3DXVECTOR3(0.658937f, 1.6196f, -4.5156f);
	vertices[702].position = D3DXVECTOR3(0.726792f, 2.65503f, -4.5156f);
	vertices[703].position = D3DXVECTOR3(0.658937f, 1.6196f, -4.83165f);
	vertices[704].position = D3DXVECTOR3(0.726792f, 2.65503f, -4.83165f);
	vertices[705].position = D3DXVECTOR3(0.726792f, 2.65503f, -4.5156f);
	vertices[706].position = D3DXVECTOR3(0.658937f, 1.6196f, -4.5156f);
	vertices[707].position = D3DXVECTOR3(0.658937f, 1.6196f, -4.83165f);
	vertices[708].position = D3DXVECTOR3(0.658937f, 1.6196f, -4.83165f);
	vertices[709].position = D3DXVECTOR3(0.403931f, 2.64687f, -4.83165f);
	vertices[710].position = D3DXVECTOR3(0.726792f, 2.65503f, -4.83165f);
	vertices[711].position = D3DXVECTOR3(0.658937f, 1.6196f, -4.83165f);
	vertices[712].position = D3DXVECTOR3(0.351211f, 1.6084f, -4.83165f);
	vertices[713].position = D3DXVECTOR3(0.403931f, 2.64687f, -4.83165f);
	vertices[714].position = D3DXVECTOR3(0.478881f, 4.05509f, -4.83165f);
	vertices[715].position = D3DXVECTOR3(0.403931f, 2.64687f, -4.5156f);
	vertices[716].position = D3DXVECTOR3(0.478881f, 4.05509f, -4.5156f);
	vertices[717].position = D3DXVECTOR3(0.478881f, 4.05509f, -4.83165f);
	vertices[718].position = D3DXVECTOR3(0.403931f, 2.64687f, -4.83165f);
	vertices[719].position = D3DXVECTOR3(0.403931f, 2.64687f, -4.5156f);
	vertices[720].position = D3DXVECTOR3(0.478881f, 4.05509f, -4.5156f);
	vertices[721].position = D3DXVECTOR3(0.726792f, 2.65503f, -4.5156f);
	vertices[722].position = D3DXVECTOR3(0.854924f, 4.05915f, -4.5156f);
	vertices[723].position = D3DXVECTOR3(0.478881f, 4.05509f, -4.5156f);
	vertices[724].position = D3DXVECTOR3(0.403931f, 2.64687f, -4.5156f);
	vertices[725].position = D3DXVECTOR3(0.726792f, 2.65503f, -4.5156f);
	vertices[726].position = D3DXVECTOR3(0.854924f, 4.05915f, -4.5156f);
	vertices[727].position = D3DXVECTOR3(0.726792f, 2.65503f, -4.83165f);
	vertices[728].position = D3DXVECTOR3(0.854924f, 4.05915f, -4.83165f);
	vertices[729].position = D3DXVECTOR3(0.854924f, 4.05915f, -4.5156f);
	vertices[730].position = D3DXVECTOR3(0.726792f, 2.65503f, -4.5156f);
	vertices[731].position = D3DXVECTOR3(0.726792f, 2.65503f, -4.83165f);
	vertices[732].position = D3DXVECTOR3(0.726792f, 2.65503f, -4.83165f);
	vertices[733].position = D3DXVECTOR3(0.478881f, 4.05509f, -4.83165f);
	vertices[734].position = D3DXVECTOR3(0.854924f, 4.05915f, -4.83165f);
	vertices[735].position = D3DXVECTOR3(0.726792f, 2.65503f, -4.83165f);
	vertices[736].position = D3DXVECTOR3(0.403931f, 2.64687f, -4.83165f);
	vertices[737].position = D3DXVECTOR3(0.478881f, 4.05509f, -4.83165f);
	
	int i = 0;
    
	for( i = 0; i < 737; ++i )
    {
		D3DXVec3Normalize( &vertices[i].normal , &vertices[i].position);
    }
	

	// Set up the description of the static vertex buffer.
    vertexBufferDesc.Usage = D3D11_USAGE_DEFAULT;
    vertexBufferDesc.ByteWidth = sizeof(VertexNorm) * vCount;
    vertexBufferDesc.BindFlags = D3D11_BIND_VERTEX_BUFFER;
    vertexBufferDesc.CPUAccessFlags = 0;
    vertexBufferDesc.MiscFlags = 0;
	vertexBufferDesc.StructureByteStride = 0;

	// Give the subresource structure a pointer to the vertex data.
	ZeroMemory( &vertexData, sizeof( vertexData ) );
    vertexData.pSysMem = vertices;
	vertexData.SysMemPitch = 0;
	vertexData.SysMemSlicePitch = 0;

	// Now create the vertex buffer.
    result = device->CreateBuffer(&vertexBufferDesc, &vertexData, &m_vertexBuffer);
	if(FAILED(result))
	{
		return false;
	}

	// Release the array now that the vertex buffer has been created and loaded.
	delete [] vertices;
	vertices = 0;

//
// Process the index buffer	
//
	unsigned long* indices;
	D3D11_BUFFER_DESC indexBufferDesc;
	D3D11_SUBRESOURCE_DATA indexData;

	// Set the number of indices in the index array.
	int iCount = 800;
	SetIndexCount(iCount);

	// Create the index array.
	indices = new unsigned long[iCount];
	if(!indices)
	{
		return false;
	}

	// Load the index array with data.
	indices[0] = 0;
	indices[1] = 1;
	indices[2] = 2;
	indices[3] = 3;
	indices[4] = 4;
	indices[5] = 5;
	indices[6] = 6;
	indices[7] = 7;
	indices[8] = 8;
	indices[9] = 9;
	indices[10] = 10;
	indices[11] = 11;
	indices[12] = 12;
	indices[13] = 13;
	indices[14] = 14;
	indices[15] = 15;
	indices[16] = 16;
	indices[17] = 17;
	indices[18] = 18;
	indices[19] = 19;
	indices[20] = 20;
	indices[21] = 21;
	indices[22] = 22;
	indices[23] = 23;
	indices[24] = 24;
	indices[25] = 25;
	indices[26] = 26;
	indices[27] = 27;
	indices[28] = 28;
	indices[29] = 29;
	indices[30] = 30;
	indices[31] = 31;
	indices[32] = 32;
	indices[33] = 33;
	indices[34] = 34;
	indices[35] = 35;
	indices[36] = 36;
	indices[37] = 37;
	indices[38] = 38;
	indices[39] = 39;
	indices[40] = 40;
	indices[41] = 41;
	indices[42] = 42;
	indices[43] = 43;
	indices[44] = 44;
	indices[45] = 45;
	indices[46] = 46;
	indices[47] = 47;
	indices[48] = 48;
	indices[49] = 49;
	indices[50] = 50;
	indices[51] = 51;
	indices[52] = 52;
	indices[53] = 53;
	indices[54] = 54;
	indices[55] = 55;
	indices[56] = 56;
	indices[57] = 57;
	indices[58] = 58;
	indices[59] = 59;
	indices[60] = 60;
	indices[61] = 61;
	indices[62] = 62;
	indices[63] = 63;
	indices[64] = 64;
	indices[65] = 65;
	indices[66] = 66;
	indices[67] = 67;
	indices[68] = 68;
	indices[69] = 69;
	indices[70] = 70;
	indices[71] = 71;
	indices[72] = 72;
	indices[73] = 73;
	indices[74] = 74;
	indices[75] = 75;
	indices[76] = 76;
	indices[77] = 77;
	indices[78] = 78;
	indices[79] = 79;
	indices[80] = 80;
	indices[81] = 81;
	indices[82] = 82;
	indices[83] = 83;
	indices[84] = 84;
	indices[85] = 85;
	indices[86] = 86;
	indices[87] = 87;
	indices[88] = 88;
	indices[89] = 89;
	indices[90] = 90;
	indices[91] = 91;
	indices[92] = 92;
	indices[93] = 93;
	indices[94] = 94;
	indices[95] = 95;
	indices[96] = 96;
	indices[97] = 97;
	indices[98] = 98;
	indices[99] = 99;
	indices[100] = 100;
	indices[101] = 101;
	indices[102] = 102;
	indices[103] = 103;
	indices[104] = 104;
	indices[105] = 105;
	indices[106] = 106;
	indices[107] = 107;
	indices[108] = 108;
	indices[109] = 109;
	indices[110] = 110;
	indices[111] = 111;
	indices[112] = 112;
	indices[113] = 113;
	indices[114] = 114;
	indices[115] = 115;
	indices[116] = 116;
	indices[117] = 117;
	indices[118] = 118;
	indices[119] = 119;
	indices[120] = 120;
	indices[121] = 121;
	indices[122] = 122;
	indices[123] = 123;
	indices[124] = 124;
	indices[125] = 125;
	indices[126] = 126;
	indices[127] = 127;
	indices[128] = 128;
	indices[129] = 129;
	indices[130] = 130;
	indices[131] = 131;
	indices[132] = 132;
	indices[133] = 133;
	indices[134] = 134;
	indices[135] = 135;
	indices[136] = 136;
	indices[137] = 137;
	indices[138] = 138;
	indices[139] = 139;
	indices[140] = 140;
	indices[141] = 141;
	indices[142] = 142;
	indices[143] = 143;
	indices[144] = 144;
	indices[145] = 145;
	indices[146] = 146;
	indices[147] = 147;
	indices[148] = 148;
	indices[149] = 149;
	indices[150] = 150;
	indices[151] = 151;
	indices[152] = 152;
	indices[153] = 153;
	indices[154] = 154;
	indices[155] = 155;
	indices[156] = 156;
	indices[157] = 157;
	indices[158] = 158;
	indices[159] = 159;
	indices[160] = 160;
	indices[161] = 161;
	indices[162] = 162;
	indices[163] = 163;
	indices[164] = 164;
	indices[165] = 165;
	indices[166] = 166;
	indices[167] = 167;
	indices[168] = 168;
	indices[169] = 169;
	indices[170] = 170;
	indices[171] = 171;
	indices[172] = 172;
	indices[173] = 173;
	indices[174] = 174;
	indices[175] = 175;
	indices[176] = 176;
	indices[177] = 177;
	indices[178] = 178;
	indices[179] = 179;
	indices[180] = 180;
	indices[181] = 181;
	indices[182] = 182;
	indices[183] = 183;
	indices[184] = 184;
	indices[185] = 185;
	indices[186] = 186;
	indices[187] = 187;
	indices[188] = 188;
	indices[189] = 189;
	indices[190] = 190;
	indices[191] = 191;
	indices[192] = 192;
	indices[193] = 193;
	indices[194] = 194;
	indices[195] = 195;
	indices[196] = 196;
	indices[197] = 197;
	indices[198] = 198;
	indices[199] = 199;
	indices[200] = 200;
	indices[201] = 201;
	indices[202] = 202;
	indices[203] = 203;
	indices[204] = 204;
	indices[205] = 205;
	indices[206] = 206;
	indices[207] = 207;
	indices[208] = 208;
	indices[209] = 209;
	indices[210] = 210;
	indices[211] = 211;
	indices[212] = 212;
	indices[213] = 213;
	indices[214] = 214;
	indices[215] = 215;
	indices[216] = 216;
	indices[217] = 217;
	indices[218] = 218;
	indices[219] = 219;
	indices[220] = 220;
	indices[221] = 221;
	indices[222] = 222;
	indices[223] = 223;
	indices[224] = 224;
	indices[225] = 225;
	indices[226] = 226;
	indices[227] = 227;
	indices[228] = 228;
	indices[229] = 229;
	indices[230] = 230;
	indices[231] = 231;
	indices[232] = 232;
	indices[233] = 233;
	indices[234] = 234;
	indices[235] = 235;
	indices[236] = 236;
	indices[237] = 237;
	indices[238] = 238;
	indices[239] = 239;
	indices[240] = 240;
	indices[241] = 241;
	indices[242] = 242;
	indices[243] = 243;
	indices[244] = 244;
	indices[245] = 245;
	indices[246] = 246;
	indices[247] = 247;
	indices[248] = 248;
	indices[249] = 249;
	indices[250] = 250;
	indices[251] = 251;
	indices[252] = 252;
	indices[253] = 253;
	indices[254] = 254;
	indices[255] = 255;
	indices[256] = 256;
	indices[257] = 257;
	indices[258] = 258;
	indices[259] = 259;
	indices[260] = 260;
	indices[261] = 261;
	indices[262] = 262;
	indices[263] = 263;
	indices[264] = 264;
	indices[265] = 265;
	indices[266] = 266;
	indices[267] = 267;
	indices[268] = 268;
	indices[269] = 269;
	indices[270] = 270;
	indices[271] = 271;
	indices[272] = 272;
	indices[273] = 273;
	indices[274] = 274;
	indices[275] = 275;
	indices[276] = 276;
	indices[277] = 277;
	indices[278] = 278;
	indices[279] = 279;
	indices[280] = 280;
	indices[281] = 281;
	indices[282] = 282;
	indices[283] = 283;
	indices[284] = 284;
	indices[285] = 285;
	indices[286] = 286;
	indices[287] = 287;
	indices[288] = 288;
	indices[289] = 289;
	indices[290] = 290;
	indices[291] = 291;
	indices[292] = 292;
	indices[293] = 293;
	indices[294] = 294;
	indices[295] = 295;
	indices[296] = 296;
	indices[297] = 297;
	indices[298] = 298;
	indices[299] = 299;
	indices[300] = 300;
	indices[301] = 301;
	indices[302] = 302;
	indices[303] = 303;
	indices[304] = 304;
	indices[305] = 305;
	indices[306] = 306;
	indices[307] = 307;
	indices[308] = 308;
	indices[309] = 309;
	indices[310] = 310;
	indices[311] = 311;
	indices[312] = 312;
	indices[313] = 313;
	indices[314] = 314;
	indices[315] = 315;
	indices[316] = 316;
	indices[317] = 317;
	indices[318] = 318;
	indices[319] = 319;
	indices[320] = 320;
	indices[321] = 321;
	indices[322] = 322;
	indices[323] = 323;
	indices[324] = 324;
	indices[325] = 325;
	indices[326] = 326;
	indices[327] = 327;
	indices[328] = 328;
	indices[329] = 329;
	indices[330] = 330;
	indices[331] = 331;
	indices[332] = 332;
	indices[333] = 333;
	indices[334] = 334;
	indices[335] = 335;
	indices[336] = 336;
	indices[337] = 337;
	indices[338] = 338;
	indices[339] = 339;
	indices[340] = 340;
	indices[341] = 341;
	indices[342] = 342;
	indices[343] = 343;
	indices[344] = 344;
	indices[345] = 345;
	indices[346] = 346;
	indices[347] = 347;
	indices[348] = 348;
	indices[349] = 349;
	indices[350] = 350;
	indices[351] = 351;
	indices[352] = 352;
	indices[353] = 353;
	indices[354] = 354;
	indices[355] = 355;
	indices[356] = 356;
	indices[357] = 357;
	indices[358] = 358;
	indices[359] = 359;
	indices[360] = 360;
	indices[361] = 361;
	indices[362] = 362;
	indices[363] = 363;
	indices[364] = 364;
	indices[365] = 365;
	indices[366] = 366;
	indices[367] = 367;
	indices[368] = 368;
	indices[369] = 369;
	indices[370] = 370;
	indices[371] = 371;
	indices[372] = 372;
	indices[373] = 373;
	indices[374] = 374;
	indices[375] = 375;
	indices[376] = 376;
	indices[377] = 377;
	indices[378] = 378;
	indices[379] = 379;
	indices[380] = 380;
	indices[381] = 381;
	indices[382] = 382;
	indices[383] = 383;
	indices[384] = 384;
	indices[385] = 385;
	indices[386] = 386;
	indices[387] = 387;
	indices[388] = 388;
	indices[389] = 389;
	indices[390] = 390;
	indices[391] = 391;
	indices[392] = 392;
	indices[393] = 393;
	indices[394] = 394;
	indices[395] = 395;
	indices[396] = 396;
	indices[397] = 397;
	indices[398] = 398;
	indices[399] = 399;
	indices[400] = 400;
	indices[401] = 401;
	indices[402] = 402;
	indices[403] = 403;
	indices[404] = 404;
	indices[405] = 405;
	indices[406] = 406;
	indices[407] = 407;
	indices[408] = 408;
	indices[409] = 409;
	indices[410] = 410;
	indices[411] = 411;
	indices[412] = 412;
	indices[413] = 413;
	indices[414] = 414;
	indices[415] = 415;
	indices[416] = 416;
	indices[417] = 417;
	indices[418] = 418;
	indices[419] = 419;
	indices[420] = 420;
	indices[421] = 421;
	indices[422] = 422;
	indices[423] = 423;
	indices[424] = 424;
	indices[425] = 425;
	indices[426] = 426;
	indices[427] = 427;
	indices[428] = 428;
	indices[429] = 429;
	indices[430] = 430;
	indices[431] = 431;
	indices[432] = 432;
	indices[433] = 433;
	indices[434] = 434;
	indices[435] = 435;
	indices[436] = 436;
	indices[437] = 437;
	indices[438] = 438;
	indices[439] = 439;
	indices[440] = 440;
	indices[441] = 441;
	indices[442] = 442;
	indices[443] = 443;
	indices[444] = 444;
	indices[445] = 445;
	indices[446] = 446;
	indices[447] = 447;
	indices[448] = 448;
	indices[449] = 449;
	indices[450] = 450;
	indices[451] = 451;
	indices[452] = 452;
	indices[453] = 453;
	indices[454] = 454;
	indices[455] = 455;
	indices[456] = 456;
	indices[457] = 457;
	indices[458] = 458;
	indices[459] = 459;
	indices[460] = 460;
	indices[461] = 461;
	indices[462] = 462;
	indices[463] = 463;
	indices[464] = 464;
	indices[465] = 465;
	indices[466] = 466;
	indices[467] = 467;
	indices[468] = 468;
	indices[469] = 469;
	indices[470] = 470;
	indices[471] = 471;
	indices[472] = 472;
	indices[473] = 473;
	indices[474] = 474;
	indices[475] = 475;
	indices[476] = 476;
	indices[477] = 477;
	indices[478] = 478;
	indices[479] = 479;
	indices[480] = 480;
	indices[481] = 481;
	indices[482] = 482;
	indices[483] = 483;
	indices[484] = 484;
	indices[485] = 485;
	indices[486] = 486;
	indices[487] = 487;
	indices[488] = 488;
	indices[489] = 489;
	indices[490] = 490;
	indices[491] = 491;
	indices[492] = 492;
	indices[493] = 493;
	indices[494] = 494;
	indices[495] = 495;
	indices[496] = 496;
	indices[497] = 497;
	indices[498] = 498;
	indices[499] = 499;
	indices[500] = 500;
	indices[501] = 501;
	indices[502] = 502;
	indices[503] = 503;
	indices[504] = 504;
	indices[505] = 505;
	indices[506] = 506;
	indices[507] = 507;
	indices[508] = 508;
	indices[509] = 509;
	indices[510] = 510;
	indices[511] = 511;
	indices[512] = 512;
	indices[513] = 513;
	indices[514] = 514;
	indices[515] = 515;
	indices[516] = 516;
	indices[517] = 517;
	indices[518] = 518;
	indices[519] = 519;
	indices[520] = 520;
	indices[521] = 521;
	indices[522] = 522;
	indices[523] = 523;
	indices[524] = 524;
	indices[525] = 525;
	indices[526] = 526;
	indices[527] = 527;
	indices[528] = 528;
	indices[529] = 529;
	indices[530] = 530;
	indices[531] = 531;
	indices[532] = 532;
	indices[533] = 533;
	indices[534] = 534;
	indices[535] = 535;
	indices[536] = 536;
	indices[537] = 537;
	indices[538] = 538;
	indices[539] = 539;
	indices[540] = 540;
	indices[541] = 541;
	indices[542] = 542;
	indices[543] = 543;
	indices[544] = 544;
	indices[545] = 545;
	indices[546] = 546;
	indices[547] = 547;
	indices[548] = 548;
	indices[549] = 549;
	indices[550] = 550;
	indices[551] = 551;
	indices[552] = 552;
	indices[553] = 553;
	indices[554] = 554;
	indices[555] = 555;
	indices[556] = 556;
	indices[557] = 557;
	indices[558] = 558;
	indices[559] = 559;
	indices[560] = 560;
	indices[561] = 561;
	indices[562] = 562;
	indices[563] = 563;
	indices[564] = 564;
	indices[565] = 565;
	indices[566] = 566;
	indices[567] = 567;
	indices[568] = 568;
	indices[569] = 569;
	indices[570] = 570;
	indices[571] = 571;
	indices[572] = 572;
	indices[573] = 573;
	indices[574] = 574;
	indices[575] = 575;
	indices[576] = 576;
	indices[577] = 577;
	indices[578] = 578;
	indices[579] = 579;
	indices[580] = 580;
	indices[581] = 581;
	indices[582] = 582;
	indices[583] = 583;
	indices[584] = 584;
	indices[585] = 585;
	indices[586] = 586;
	indices[587] = 587;
	indices[588] = 588;
	indices[589] = 589;
	indices[590] = 590;
	indices[591] = 591;
	indices[592] = 592;
	indices[593] = 593;
	indices[594] = 594;
	indices[595] = 595;
	indices[596] = 596;
	indices[597] = 597;
	indices[598] = 598;
	indices[599] = 599;
	indices[600] = 600;
	indices[601] = 601;
	indices[602] = 602;
	indices[603] = 603;
	indices[604] = 604;
	indices[605] = 605;
	indices[606] = 606;
	indices[607] = 607;
	indices[608] = 608;
	indices[609] = 609;
	indices[610] = 610;
	indices[611] = 611;
	indices[612] = 612;
	indices[613] = 613;
	indices[614] = 614;
	indices[615] = 615;
	indices[616] = 616;
	indices[617] = 617;
	indices[618] = 618;
	indices[619] = 619;
	indices[620] = 620;
	indices[621] = 621;
	indices[622] = 622;
	indices[623] = 623;
	indices[624] = 624;
	indices[625] = 625;
	indices[626] = 626;
	indices[627] = 627;
	indices[628] = 628;
	indices[629] = 629;
	indices[630] = 630;
	indices[631] = 631;
	indices[632] = 632;
	indices[633] = 633;
	indices[634] = 634;
	indices[635] = 635;
	indices[636] = 636;
	indices[637] = 637;
	indices[638] = 638;
	indices[639] = 639;
	indices[640] = 640;
	indices[641] = 641;
	indices[642] = 642;
	indices[643] = 643;
	indices[644] = 644;
	indices[645] = 645;
	indices[646] = 646;
	indices[647] = 647;
	indices[648] = 648;
	indices[649] = 649;
	indices[650] = 650;
	indices[651] = 651;
	indices[652] = 652;
	indices[653] = 653;
	indices[654] = 654;
	indices[655] = 655;
	indices[656] = 656;
	indices[657] = 657;
	indices[658] = 658;
	indices[659] = 659;
	indices[660] = 660;
	indices[661] = 661;
	indices[662] = 662;
	indices[663] = 663;
	indices[664] = 664;
	indices[665] = 665;
	indices[666] = 666;
	indices[667] = 667;
	indices[668] = 668;
	indices[669] = 669;
	indices[670] = 670;
	indices[671] = 671;
	indices[672] = 672;
	indices[673] = 673;
	indices[674] = 674;
	indices[675] = 675;
	indices[676] = 676;
	indices[677] = 677;
	indices[678] = 678;
	indices[679] = 679;
	indices[680] = 680;
	indices[681] = 681;
	indices[682] = 682;
	indices[683] = 683;
	indices[684] = 684;
	indices[685] = 685;
	indices[686] = 686;
	indices[687] = 687;
	indices[688] = 688;
	indices[689] = 689;
	indices[690] = 690;
	indices[691] = 691;
	indices[692] = 692;
	indices[693] = 693;
	indices[694] = 694;
	indices[695] = 695;
	indices[696] = 696;
	indices[697] = 697;
	indices[698] = 698;
	indices[699] = 699;
	indices[700] = 700;
	indices[701] = 701;
	indices[702] = 702;
	indices[703] = 703;
	indices[704] = 704;
	indices[705] = 705;
	indices[706] = 706;
	indices[707] = 707;
	indices[708] = 708;
	indices[709] = 709;
	indices[710] = 710;
	indices[711] = 711;
	indices[712] = 712;
	indices[713] = 713;
	indices[714] = 714;
	indices[715] = 715;
	indices[716] = 716;
	indices[717] = 717;
	indices[718] = 718;
	indices[719] = 719;
	indices[720] = 720;
	indices[721] = 721;
	indices[722] = 722;
	indices[723] = 723;
	indices[724] = 724;
	indices[725] = 725;
	indices[726] = 726;
	indices[727] = 727;
	indices[728] = 728;
	indices[729] = 729;
	indices[730] = 730;
	indices[731] = 731;
	indices[732] = 732;
	indices[733] = 733;
	indices[734] = 734;
	indices[735] = 735;
	indices[736] = 736;
	indices[737] = 737;

	// Set up the description of the static index buffer.
    indexBufferDesc.Usage = D3D11_USAGE_DEFAULT;
    indexBufferDesc.ByteWidth = sizeof(unsigned long) * iCount;
    indexBufferDesc.BindFlags = D3D11_BIND_INDEX_BUFFER;
    indexBufferDesc.CPUAccessFlags = 0;
    indexBufferDesc.MiscFlags = 0;
	indexBufferDesc.StructureByteStride = 0;

	// Give the subresource structure a pointer to the index data.
    indexData.pSysMem = indices;
	indexData.SysMemPitch = 0;
	indexData.SysMemSlicePitch = 0;

	// Create the index buffer.
	result = device->CreateBuffer(&indexBufferDesc, &indexData, &m_indexBuffer);
	if(FAILED(result))
	{
		return false;
	}

	// Release the array now that the vertex buffer has been created and loaded.
	delete [] indices;
	indices = 0;

	return true;
}


void CubeModelClass::Render(ID3D11DeviceContext* deviceContext)
{
	//Update the world transformations
	UINT  iTime  = timeGetTime() % 6000;
	float fAngle = iTime * 2 * D3DX_PI / 6000.0f;
	D3DXMATRIX rotMatrixX, rotMatrixY, scaleMatrix, transMatrix;
	D3DXMatrixRotationX(&rotMatrixX, fAngle );
	//D3DXMatrixRotationY(&rotMatrixY, fAngle );
	
	D3DXMatrixTranslation(&transMatrix, 2.2f,1.0f,0.0f);
	SetModelWorldMatrix(rotMatrixX*/*rotMatrixY*/transMatrix);

	// Put the vertex and index buffers on the graphics pipeline to prepare them for drawing.
	RenderBuffers(deviceContext);

	return;
}


void CubeModelClass::RenderBuffers(ID3D11DeviceContext* deviceContext)
{
	unsigned int stride;
	unsigned int offset;

	// Set vertex buffer stride and offset.
	stride = sizeof(VertexNorm); 
	offset = 0;
    
	// Set the vertex buffer to active in the input assembler so it can be rendered.
	deviceContext->IASetVertexBuffers(0, 1, &m_vertexBuffer, &stride, &offset);

    // Set the index buffer to active in the input assembler so it can be rendered.
	deviceContext->IASetIndexBuffer(m_indexBuffer, DXGI_FORMAT_R32_UINT, 0);

    // Set the type of primitive that should be rendered from this vertex buffer, in this case Spheres.
	deviceContext->IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST);

	// render primitives
	deviceContext->DrawIndexed(GetIndexCount(), 0, 0);

	return;
}